# 设置用户名和用户组
user  www www;
#单核机器设置nginx进程数 1；
#worker_processes  1;

#多核设置成CPU的个数，并将进程绑定到对应的CPU上；
#worker_processes    4;
#worker_cpu_affinity 0001 0010 0100 1000;

#Tengine 支持自动处理
worker_processes auto;

#worker_rlimit_nofile 204800;

error_log  /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

pid        /var/run/nginx.pid;


events {
   #使用epoll的I/O模型；
   use epoll;
   #每个进程允许的最多连接数;
   worker_connections 65535;
   #在Nginx接到一个新连接通知后调用accept()来接受尽量多的连接
   multi_accept on;
}

# Tengine load modules compiled as Dynamic Shared Object (DSO)
#
#dso {
#    load ngx_http_fastcgi_module.so;
#    load ngx_http_rewrite_module.so;
#}

http {
    ##
    # Basic Settings
    ##
    include       mime.types;
    default_type  application/octet-stream;

    server_names_hash_bucket_size 128;
    client_header_buffer_size 32k;

    large_client_header_buffers 4 32k;
    client_max_body_size 50m;

    sendfile       on;
    tcp_nopush     on;
    server_tokens  off;

    #keepalive超时时间
    #keepalive_timeout  0;
    keepalive_timeout  65;

    tcp_nodelay on;

    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 256k;

    ##
    # Gzip Settings
    ##
    gzip on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;
    gzip_vary on;
    gzip_proxied        expired no-cache no-store private auth;
    gzip_disable        "MSIE [1-6]\.";
    
    
    #limit_conn_zone $binary_remote_addr zone=perip:10m;
    ##If enable limit_conn_zone,add "limit_conn perip 10;" to server section.
	
    ##
    # Logging Settings
    ##
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log off;
    
    ##
    # Virtual Host Configs
    ##

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       80 default_server;
    #    listen       somename:8080;
    #    listen [::]:80 default_server ipv6only=on;
    #    server_name  somename  alias  another.alias;
    #    root   html;
    #    index  index.html index.htm;

    #    location /nginx_status {
    #        stub_status on;
    #        access_log   off;
    #    }
    #}

    #server {
    #     listen       80;
    #     server_name  localhost;
    #     rewrite ^(.*) https://localhost$1 permanent;
    #}

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    #server {
    #	root        /home/www/aaa/wwwroot/;
    #	index       index.html index.htm index.php;
    #	listen      80;
    #	charset     utf-8;
    #	server_name www.aaa.com;

    #	location = /favicon.ico {
    #	    log_not_found off;
    #	    access_log off;
    #	}

    #	location = /robots.txt {
    #	    allow all;
    #	    log_not_found off;
    #	    access_log off;
    #	}

    #	location ~* .(css|js)$ {
    #    	if (-f $request_filename) {
    #    	    expires 3d;
    #    	    break;
    #    	}
    #	}

    #	location ~* .(jpg|gif|png|jpeg|bmp)$ {
    #    	if (-f $request_filename) {
    #    	    expires 15d;
    #    	    break;
    #    	}
    #	}

    #	location ~* .(swf|zip|rar|gz|7z)$ {
    #    	if (-f $request_filename) {
    #    	    expires 1m;
    #    	    break;
    #    	}
    #	}

    ## rewrite
    #	if (!-e $request_filename) {
    #    	rewrite ^/.* /index.php last;
    #	}
    #	if (!-e $request_filename){
    #	        rewrite ^/(.*) /index.php last;
    #	}

    ## proxy the PHP scripts to Apache listening on 127.0.0.1:80	
    #	location ~ \.php$ {
    #	    proxy_pass   http://127.0.0.1;
    #	}

    #	# pass the PHP scripts to FastCGI server listening on unix:/tmp/php-fpm.sock;
    #   location ~ \.php$ {
    #       fastcgi_pass   127.0.0.1:9000;
    #       fastcgi_pass   unix:/tmp/php-fpm.sock;
    #       fastcgi_index  index.php;
    #       fastcgi_split_path_info ^(.+\.php)(.*)$;
    #       fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    #       fastcgi_param  PATH_INFO      $fastcgi_path_info;
    #       fastcgi_param  PATH_TRANSLATED    $document_root$fastcgi_path_info;
    #       include        fastcgi.conf;
    #   }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #    location ~ /(\.svn|\.git|\.ht|\.DS) {
    #        deny all;
    #        internal;
    #    }
    #}
    
    include sites-enabled/*.conf;
}

#代理Mail
#mail {
	# See sample authentication script at:
	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
 
	# auth_http localhost/auth.php;
	# pop3_capabilities "TOP" "USER";
	# imap_capabilities "IMAP4rev1" "UIDPLUS";
 
	#server {
	#	listen     localhost:110;
	#	protocol   pop3;
	#	proxy      on;
	#}
 
	#server {
	#	listen     localhost:143;
	#	protocol   imap;
	#	proxy      on;
	#}
#}